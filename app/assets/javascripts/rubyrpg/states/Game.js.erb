RubyRPG.Game = function(game) {
	// keys = null;
	// ball = null;
	// walls = null;
	// timer = 0;
	// totalTimer = 0;
	// loop = null;
	// firstRun = true;
	// level = 0;
	// sfx_bounce = null;
	// maxLevels = 5;
	// audio = true;
};
RubyRPG.Game.prototype = {
	create: function() {
		// this.add.sprite(0, 0, 'screen-bg');
		// panel = this.add.sprite(0, 0, 'panel');
		// panel.body.immovable = true;

		// walls = this.game.add.group();
		// walls.add(panel);

		// pauseButton = this.add.button(320-36-8, 8, 'button-pause', this.managePause, this);
		// audioButton = this.add.button(320-36-8-36-8, 8, 'button-audio', this.manageAudio, this);
		// audioButton.animations.add('true', [0], 10, true);
		// audioButton.animations.add('false', [1], 10, true);
		// audioButton.animations.play(audio);

		// timerText = this.game.add.text(15, 15, "Time: "+timer, { font: "24px Arial", fill: "#e4beef" });
		// levelText = this.game.add.text(120, 10, "Level: "+level, { font: "16px Arial", fill: "#e4beef" });
		// totalTimeText = this.game.add.text(120, 30, "Total time: "+totalTimer, { font: "16px Arial", fill: "#e4beef" });

		// hole = this.add.sprite((320)/2, 90, 'hole');
		// hole.body.immovable = true;
		// hole.anchor.setTo(0.5, 0.5);
		// hole.body.setCircle(5,15,15);

		// ball = this.add.sprite((320)/2, 450, 'ball');
		// ball.anchor.setTo(0.5, 0.5);
		// ball.body.bounce.setTo(0.3, 0.3);
		// ball.body.setCircle(11, 12, 12);
		// ball.body.linearDamping = 1;
		// ball.body.collideWorldBounds = true;

		// keys = this.game.input.keyboard.createCursorKeys();
		// Stage background color

    this.game.stage.backgroundColor = '#000';

    // Enable world physics
    this.game.physics.startSystem(Phaser.Physics.P2JS);

    // Load up World Tilemap and Image data
    this.map = this.game.add.tilemap('World');
    this.map.addTilesetImage('World', 'world');

    // Create our map layers
    this.ground = this.map.createLayer('Ground');
    this.walls = this.map.createLayer('Walls');
    this.misc = this.map.createLayer('Misc');

    // Set world bounds to the map size
    this.game.world.setBounds(0, 0, 416, 352);
    this.ground.resizeWorld();

    // Create and insert our player model
    this.player = new Player(this.game, 300, 200);
    this.game.add.existing(this.player);

    // Force camera to follow player
    this.game.camera.follow(this.player, Phaser.Camera.FOLLOW_TOPDOWN_TIGHT);

	},
	update: function() {
    // Make sure player body has no velocity in any direction
    this.player.body.setZeroVelocity();
    // Begin player controls and movement animations
    if (this.game.input.keyboard.isDown(Phaser.Keyboard.LEFT))
    {
      this.player.body.moveLeft(800);
      this.player.animations.play('walkLeft',15,false);
    }
    else if (this.game.input.keyboard.isDown(Phaser.Keyboard.RIGHT))
    {
      this.player.body.moveRight(800);
      this.player.animations.play('walkRight',15,false);
    }

    if (this.game.input.keyboard.isDown(Phaser.Keyboard.UP))
    {
      this.player.body.moveUp(800);
      this.player.animations.play('walkUp',15,false);
    }
    else if (this.game.input.keyboard.isDown(Phaser.Keyboard.DOWN))
    {
      this.player.body.moveDown(800);
      this.player.animations.play('walkDown',15,false);
    }
  }
};
